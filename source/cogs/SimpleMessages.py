import discord
from discord.ext import commands

from main import prefix

class SimpleMessages(commands.Cog):

    def __init__(self, client):
        self.client = client
        self.goose_expectation = {'–ó–ê–ü–£–°–ö–ê–ï–ú\n‚ñë','–∑–∞–ø—É—Å–∫–∞–π—Ç–µ –≥—É—Å—è', '–≥—É—Å—è!'}
        self.bogdan_expectation = {'‚ñë‚ñë‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñà','–∑–∞–ø—É—Å–∫–∞–π—Ç–µ –±–æ–≥–¥–∞–Ω–∞', '–ë–æ–≥–¥–∞–Ω!'}
        self.f_expectation = {'f', '—Ñ—Ñ—Ñ'}
        self.second_h5message = False

    @commands.Cog.listener()
    async def on_ready(self):
        print('initialized bot: {0.user}\n'
              '==============================================\n'.format(self.client))

    @commands.Cog.listener()
    async def on_message(self, message):
        if message.content.startswith(prefix) or message.author == self.client.user:
            return

        if message.author.id == 485330482276466698:
            if self.second_h5message:
                await message.add_reaction('ü§ö')
            self.second_h5message = not self.second_h5message

        for taken_f in self.f_expectation:
            if message.content.startswith(taken_f) and len(message.content) <= 3:
                await message.channel.send(':regional_indicator_f:')

        for taken_goose in self.goose_expectation:
            if message.content.startswith(taken_goose):
                await message.channel.send('–ó–ê–ü–£–°–ö–ê–ï–ú\n'
                                            '‚ñë–ì–£–°–Ø‚ñë‚ñÑ‚ñÄ‚ñÄ‚ñÄ‚ñÑ‚ñë–†–ê–ë–û–¢–Ø–ì–ò‚ñë‚ñë\n'
                                            '‚ñÑ‚ñà‚ñà‚ñà‚ñÄ‚ñë‚óê‚ñë‚ñë‚ñë‚ñå‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë\n'
                                            '‚ñë‚ñë‚ñë‚ñë‚ñå‚ñë‚ñë‚ñë‚ñë‚ñë‚ñê‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë\n'
                                            '‚ñë‚ñë‚ñë‚ñë‚ñê‚ñë‚ñë‚ñë‚ñë‚ñë‚ñê‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë\n'
                                            '‚ñë‚ñë‚ñë‚ñë‚ñå‚ñë‚ñë‚ñë‚ñë‚ñë‚ñê‚ñÑ‚ñÑ‚ñë‚ñë‚ñë‚ñë‚ñë\n'
                                            '‚ñë‚ñë‚ñë‚ñë‚ñå‚ñë‚ñë‚ñë‚ñë‚ñÑ‚ñÄ‚ñí‚ñí‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÑ\n'
                                            '‚ñë‚ñë‚ñë‚ñê‚ñë‚ñë‚ñë‚ñë‚ñê‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñÄ‚ñÄ‚ñÑ\n'
                                            '‚ñë‚ñë‚ñë‚ñê‚ñë‚ñë‚ñë‚ñë‚ñê‚ñÑ‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñÄ‚ñÑ\n'
                                            '‚ñë‚ñë‚ñë‚ñë‚ñÄ‚ñÑ‚ñë‚ñë‚ñë‚ñë‚ñÄ‚ñÑ‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñÄ‚ñÑ\n'
                                            '‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñÄ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñà‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÄ‚ñÑ\n'
                                            '‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñå‚ñå‚ñë‚ñå‚ñå‚ñë‚ñë‚ñë‚ñë‚ñë\n'
                                            '‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñå‚ñå‚ñë‚ñå‚ñå‚ñë‚ñë‚ñë‚ñë‚ñë\n'
                                            '‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñÑ‚ñÑ‚ñå‚ñå‚ñÑ‚ñå‚ñå‚ñë‚ñë‚ñë‚ñë‚ñë\n')

        for taken_bogdan in self.bogdan_expectation:
            if message.content.startswith(taken_bogdan):
                await message.channel.send('‚ñë‚ñë‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÑ\n'
                                            '‚ñë‚ñê‚ñà‚ñà‚ñà‚ñà‚ñÄ‚ñí–ó–ê–ü–£–°–ö–ê–ï–ú‚ñí‚ñÄ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÑ\n'
                                            '‚ñë‚ñà‚ñà‚ñà‚ñÄ‚ñí‚ñí‚ñí‚ñí‚ñí–î–Ø–î–Æ‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñÄ‚ñà‚ñà‚ñà‚ñà‚ñà\n'
                                            '‚ñë‚ñê‚ñà‚ñà‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí–ë–û–ì–î–ê–ù–ê‚ñí‚ñí‚ñí‚ñí‚ñí‚ñà‚ñà‚ñà‚ñà‚ñå\n'
                                            '‚ñë‚ñê‚ñà‚ñå‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñà‚ñà‚ñà‚ñà‚ñå\n'
                                            '‚ñë‚ñë‚ñà‚ñí‚ñÑ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÑ‚ñí‚ñí‚ñÑ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÑ‚ñí‚ñê‚ñà‚ñà‚ñà‚ñå\n'
                                            '‚ñë‚ñë‚ñë‚ñê‚ñë‚ñë‚ñë‚ñÑ‚ñÑ‚ñë‚ñë‚ñå‚ñê‚ñë‚ñë‚ñë‚ñÑ‚ñÑ‚ñë‚ñë‚ñå‚ñê‚ñà‚ñà‚ñà‚ñå\n'
                                            '‚ñë‚ñÑ‚ñÄ‚ñå‚ñë‚ñë‚ñë‚ñÄ‚ñÄ‚ñë‚ñë‚ñå‚ñê‚ñë‚ñë‚ñë‚ñÄ‚ñÄ‚ñë‚ñë‚ñå‚ñí‚ñÄ‚ñí‚ñà‚ñå\n'
                                            '‚ñë‚ñå‚ñí‚ñÄ‚ñÑ‚ñë‚ñë‚ñë‚ñë‚ñÑ‚ñÄ‚ñí‚ñí‚ñÄ‚ñÑ‚ñë‚ñë‚ñë‚ñÑ‚ñÄ‚ñí‚ñí‚ñÑ‚ñÄ‚ñí‚ñå\n'
                                            '‚ñë‚ñÄ‚ñÑ‚ñê‚ñí‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñÄ‚ñÄ‚ñÄ‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñà\n'
                                            '‚ñë‚ñë‚ñë‚ñÄ‚ñå‚ñí‚ñÑ‚ñà‚ñà‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñÑ‚ñí‚ñí‚ñí‚ñí‚ñà‚ñÄ\n'
                                            '‚ñë‚ñë‚ñë‚ñë‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí‚ñê‚ñå\n'
                                            '‚ñë‚ñë‚ñë‚ñÄ‚ñà‚ñà‚ñà‚ñÄ‚ñÄ‚ñà‚ñà‚ñà‚ñà‚ñÄ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÄ‚ñí‚ñå\n'
                                            '‚ñë‚ñë‚ñë‚ñë‚ñë‚ñå‚ñí‚ñí‚ñí‚ñÑ‚ñí‚ñí‚ñí‚ñÑ‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñê\n'
                                            '‚ñë‚ñë‚ñë‚ñë‚ñë‚ñå‚ñí‚ñí‚ñí‚ñí‚ñÄ‚ñÄ‚ñÄ‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñê\n')

def setup(client):
    client.add_cog(SimpleMessages(client))